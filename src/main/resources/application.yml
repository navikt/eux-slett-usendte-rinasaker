spring:
  main:
    banner-mode: "off"

  datasource:
    hikari:
      jdbc-url: ${DATABASE_JDBC_URL}
      username: ${DATABASE_USERNAME}
      password: ${DATABASE_PASSWORD}
      driver-class-name: org.postgresql.Driver
      maximum-pool-size: 2
      minimum-idle: 1
      initialization-fail-timeout: 60000

  jpa:
    open-in-view: false
    properties:
      hibernate:
        show_sql: false
        use_sql_comments: false
        format_sql: false

  flyway:
    clean-on-validation-error: true
    clean-disabled: false

kafka:
  topics:
    eux-rina-document-events-v1: ${KAFKA_TOPICS_EUX_RINA_DOCUMENT_EVENTS_V1}
    eux-rina-case-events-v1: ${KAFKA_TOPICS_EUX_RINA_CASE_EVENTS_V1}
  bootstrap-servers: ${KAFKA_BROKERS}
  properties:
    security:
      protocol: SSL
    ssl:
      keystore:
        type: PKCS12
        location: ${KAFKA_KEYSTORE_PATH}
        password: ${KAFKA_CREDSTORE_PASSWORD}
      truststore:
        type: PKCS12
        location: ${KAFKA_TRUSTSTORE_PATH}
        password: ${KAFKA_CREDSTORE_PASSWORD}

endpoint:
  eux-rina-terminator-api: ${EUX_RINA_TERMINATOR_API_ENDPOINT}

no.nav.security.jwt:
  issuer:
    azuread:
      discoveryurl: ${AZURE_APP_WELL_KNOWN_URL}
      accepted-audience: ${AZURE_APP_CLIENT_ID}

  client:
    registration:
      eux-rina-terminator-api-credentials:
        token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
        grant-type: client_credentials
        scope: ${EUX_RINA_TERMINATOR_API_SCOPE}
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-jwk: ${AZURE_APP_JWK}
          client-auth-method: private_key_jwt
